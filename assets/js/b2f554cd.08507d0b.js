"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/tidal_profile_tadokoro","metadata":{"permalink":"/blog/tidal_profile_tadokoro","editUrl":"https://github.com/tidalcycles/tidal-doc/tree/main/blog/blog/tidal_profile_tadokoro.md","source":"@site/blog/tidal_profile_tadokoro.md","title":"Tidal Profile - Atsushi Tadokoro","description":"|          Tidal Cyclist | Atsushi Tadokoro                                             |","date":"2023-03-15T00:00:00.000Z","formattedDate":"March 15, 2023","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Tidal Profile - Atsushi Tadokoro","date":"2023-03-15T00:00:00.000Z"},"nextItem":{"title":"Tidal Profile - froos","permalink":"/blog/tidal_profile_froos"}},"content":"|          Tidal Cyclist | Atsushi Tadokoro                                             |\\r\\n| ---------------------: | :----------------------------------------------------------- |\\r\\n|                    aka | tado, yoppa                                                  |\\r\\n|               Location | Maebashi Japan                                               |\\r\\n|       Years with Tidal | 7  yrs                                                       |\\r\\n|   Other LiveCoding env | SuperCollider, SonicPi, Hydra, Kodelife                      |\\r\\n| Music available online | [SoundCluod](https://soundcloud.com/tadokoro), [Vimeo](https://vimeo.com/tadokoro) |\\r\\n|            Code online | [GitHub](https://github.com/tado)                            |\\r\\n|   Other music/audio sw | Audacity, Pure Data, Ableton Live                            |\\r\\n|               Comments | [Club Tidal Forum Thread](https://club.tidalcycles.org/t/blog-profile-atsushi-tadokoro/4622) |\\r\\n\\r\\n![](https://yoppa.org/wp-content/uploads/2023/03/hypergeek.jpg)\\r\\n\\r\\nphoto: Phont @phont1105 (ANGRM\u2122)\\r\\n\\r\\n## Livecoding  \\r\\n\\r\\n**What do you like about livecoding in Tidal? What inspires you?**   \\r\\n\\r\\nWhat I like about live coding with TidalCycles is that I can improvise and change the pattern flexibly per-part basis (connections, d1, d2, d3).  It also combines musical and coding ideas at a high level.\\r\\n\\r\\n**How do you approach your livecoding sessions?**  \\r\\n\\r\\nIn my case, I pre-code a rough flow in TidalCycles according to the time I need to perform. However, I leave as much room for improvisational changes and extensions to the code, making for improvisational and varied performances.\\r\\n\\r\\n**What functions and coding approaches do you like to use?**  \\r\\n\\r\\nThe function I currently use most often is the combination of scale and remainder operations to generate various phrases. For example, the following code is used.\\r\\n\\r\\n```haskell\\r\\nd1\\r\\n  $ s \\"supersaw*16\\"\\r\\n  # sustain \\"0.1\\"\\r\\n  # note (scale \\"minPent\\" \\"{-12..0}%5\\")\\r\\n```\\r\\n\\r\\nIf the scale (minPent) used is changed to something else, the impression of the melody changes drastically. It is like improvisation in modal jazz.\\r\\n\\r\\nFurthermore, by using the left and right channels effectively and by adding filters, you can add more depth to the performance.\\r\\n\\r\\n```haskell\\r\\nd1\\r\\n  $ s \\"supersaw*16\\"\\r\\n  # pan (rand)  \\r\\n  # sustain \\"0.1\\"\\r\\n  # note (scale \\"indian\\" \\"{-12..[0, 5]}%[5, 7]\\")\\r\\n  # lpf (range 200 10000 $ slow 8 $ sine) # resonance \\"0.2\\"\\r\\n```\\r\\n\\r\\nMore complex rhythmic swells can be generated by using functions such as \\"jux\\" and \\"rev\\" that create changes on the time axis.\\r\\n\\r\\n```haskell\\r\\nd1\\r\\n  $ sometimesBy 0.3 (jux (iter 16))\\r\\n  $ sometimesBy 0.1 (rev)\\r\\n  $ s \\"supersaw*16\\"\\r\\n  # pan (rand)\\r\\n  # sustain \\"0.1\\"\\r\\n  # note (scale \\"indian\\" \\"{-12..[0, 5]}%[5, 7]\\")\\r\\n  # lpf (range 200 10000 $ slow 8 $ sine) # resonance \\"0.2\\"\\r\\n```\\r\\n\\r\\n**Do you use Tidal with other tools / environments?**  \\r\\n\\r\\nI use TidalCycles in combination with other applications that generate visuals for audiovisual performance. Initially I used openFrameworks, but recently I have been using TouchDesigner.\\r\\n\\r\\nHowever, it is difficult for one person to do live coding for sound and visuals at the same time. So I am currently using a method where the results of coding in TidalCycles are linked via OSC (Open Sound Control) to generate the visuals. I do the following.\\r\\n\\r\\nFirst, I determine the names of the parameters to be sent from TidalCycles to TouchDesigner. For example, let\'s say we want to send out a numeric value of type Integer \\"td_s\\" that specifies the scene number in TouchDesigner. First, add the following statement to \\"BootTidal.hs\\"\\r\\n\\r\\n```haskell\\r\\nlet td_s = pI \\"td_s\\"\\r\\n```\\r\\n\\r\\nNext, add the following statement to the SuperCollider initialization file \\"startup.scd\\". This instruction forwards the OSC from TidalCycles to SuperCollider to yet another application, specifying an OSC argument of \\"\\\\tidalplay\\" and a port number of \\"3333\\".\\r\\n\\r\\n```c\\r\\na = NetAddr.new(\\"localhost\\", 3333);\\r\\nOSCdef(\\\\tidalplay, {\\r\\n    arg msg;\\r\\n    a.sendMsg(*msg);\\r\\n}, \'/dirt/play\', n);\\r\\n```\\r\\n\\r\\nThis OSC is parsed and used by the application generating the visuals. For example, in the case of TouchDesigner, the number can be retrieved by writing the following Python script in OSC In DAT.\\r\\n\\r\\n```python\\r\\nfrom os import times\\r\\nfrom time import time\\r\\n\\r\\ndef onReceiveOSC(dat, rowIndex, message, bytes, timeStamp, address, args, peer):\\t\\r\\n\\tlst = message.split()\\r\\n\\ttry:\\r\\n\\t\\ttd_s = lst[lst.index(\'\\"td_s\\"\') + 1]\\r\\n\\t\\top(\'scene_no\').par.value0 = td_s\\r\\n\\texcept:\\r\\n\\t\\tpass\\r\\n\\treturn\\r\\n```\\r\\n\\r\\nThis allows for live-coded audiovisual performances with synchronized sound and visuals, as shown in the video below!\\r\\n\\r\\n[![youtube](https://github.com/tado/hypergeek23/raw/main/youtube.jpg)](https://youtu.be/cB_tm-NAYRk)\\r\\n\\r\\nFor more details on the code, please refer to the Github repository below.\\r\\n\\r\\n- https://github.com/tado/hypergeek23\\r\\n\\r\\n## Tidal Contributions  \\r\\n\\r\\n**How do you contribute to Tidal Cycles? What have you worked on?**  \\r\\n\\r\\nMy focus is on education and the popularization of live coding with TidalCycles. I give lectures at universities on the central theme of live coding. The first half of the class covers the basics of live coding with Sonic Pi, and the second half is a full-scale live coding performance using TidalCycles. This type of lecture is rarely offered in Japan and has been well received.\\r\\n\\r\\n**What motivates you to work on Tidal?**   \\r\\n\\r\\nThe appeal of Tidal is its ability to generate very complex and diverse music and sounds with a few simple codes. The scalability of samples and instruments is also attractive.\\r\\n\\r\\n## Music  \\r\\n\\r\\n**Tell us about your livecoding music.**  \\r\\n\\r\\nAs I mentioned in the Livecoding section, I am interested in audio-visual expression through livecoding. In addition to that, I am interested in rhythmic expressions that sound natural but are a little bit twisted. For example, I am interested in polyrhythms, polymeters, and asymmetrical rhythms.\\r\\n\\r\\n**How has your music evolved since you have been livecoding?**  \\r\\n\\r\\nLivecoding has made me more sensitive to rhythmic structure than before. I used to use a lot of simple four-beat repetitions, but I have started to create rhythms with more complexity.\\r\\n\\r\\n**What samples or instruments do you like to work with?**  \\r\\n\\r\\nI use the sound samples and instruments included in SuperDirt as well as adding my own original samples and instruments. I have made them available in the following Github repository.\\r\\n\\r\\n- [samples-extra](https://github.com/tado/samples-extra) : Extra audio samples for SuperDirt\\r\\n- [synth-extra](https://github.com/tado/synth-extra) : Extra super collider instrument definitions\\r\\n\\r\\n**What projects are you currently working on or planning? What\'s next?** \\r\\n\\r\\nI am currently working on live coding of laser beams. I hope to show the results of my various experiments on Algorave. The current status is as shown in the video below.\\r\\n\\r\\n[![youtube](https://yoppa.org/wp-content/uploads/2023/03/hq720_2.webp)](https://www.youtube.com/shorts/ITRwjJPO2dY)\\r\\n\\r\\nhttps://www.youtube.com/shorts/ITRwjJPO2dY\\r\\n\\r\\n### Links to your music / recorded livecoding sessions\\r\\n\\r\\n- [Hyper Geek #5 (2023)](https://www.youtube.com/watch?v=cB_tm-NAYRk)\\r\\n- Show your mind on my screen (2022) - Audio Visual immersive dome live coding.\\r\\n  - [excerpt](https://vimeo.com/manage/videos/779860395)\\r\\n  - [full](https://vimeo.com/manage/videos/779998862)\\r\\n- [Solstice Night Stream December (2022)](https://youtu.be/xPaJOdygJRA)\\r\\n- [Algorave 10th Birthday (2022)](https://www.youtube.com/watch?v=O4T-3wyfuOU)\\r\\n- Danceable Polymeter (2019)\\r\\n  - [excerpt](https://vimeo.com/manage/videos/362105456)\\r\\n  - [full](https://vimeo.com/manage/videos/362100002)\\r\\n- [Synesthesic Stream (2016)](https://vimeo.com/manage/videos/179527428)\\r\\n\\r\\nComments: [Club Tidal Forum Thread](https://club.tidalcycles.org/t/blog-profile-atsushi-tadokoro/4622)"},{"id":"/tidal_profile_froos","metadata":{"permalink":"/blog/tidal_profile_froos","editUrl":"https://github.com/tidalcycles/tidal-doc/tree/main/blog/blog/tidal_profile_froos.md","source":"@site/blog/tidal_profile_froos.md","title":"Tidal Profile - froos","description":"| Tidal Cyclist  | Felix    |","date":"2023-03-14T00:00:00.000Z","formattedDate":"March 14, 2023","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Tidal Profile - froos","date":"2023-03-14T00:00:00.000Z"},"prevItem":{"title":"Tidal Profile - Atsushi Tadokoro","permalink":"/blog/tidal_profile_tadokoro"},"nextItem":{"title":"Tidal Profile - polymorphic_engine","permalink":"/blog/tidal_profile_polymorphic_engine"}},"content":"| Tidal Cyclist  | Felix    |\\n| --------:    | :---------- |\\n| aka    | froos |\\n| Location | France / Germany | \\n| Years with Tidal | 1  yrs |\\n| Other LiveCoding env | Strudel |\\n| Music available online | [YouTube](https://www.youtube.com/channel/UCCzL14wczvJyJaVYjh4nfJQ)  |\\n| Code online | [GitHub](github.com/felixroos/) |\\n| Other music/audio sw/hw | Ableton, Trumpet, DIY Synth |\\n| Comments | [Club Tidal Forum Thread](https://club.tidalcycles.org/t/tidal-cycles-blog-returns-profile-from-froos/4577/10?u=highharmonics) |\\n\\n![srudel wac](https://i.imgur.com/5fClfIp.png)\\n\\n## Livecoding  \\n\\n**What do you like about livecoding in Tidal? What inspires you?**\\n\\nThere are many things that inspire me..\\nI generally like the minimalistic, text-based approach to music making, where everything is visible at all times on one screen. When I started making music with an MPC1000, menu-diving was a key part of the process.\\nA similar thing can be said about DAWs like Ableton (and Push), where there are many different UI layers and hidden items.\\nCombining Tidal\'s simplistic interface with a terse and nestable syntax, it becomes a powerful tool full of rabbit holes to explore. Also, I like the fact that it is open source and thus hackable + the community around it is really refreshing.\\n\\n**How do you approach your livecoding sessions?**  \\n\\nBeing fairly new to livecoding, I don\'t have a goto approach, but I tend to either just start with something really simple and go with the flow, or I am exploring a specific function or idea and build on that.\\nWhen I code for myself, I don\'t pay as much attention to the overall flow of the \\"performance\\",\\nbut rather try to find a loop that I like to listen to. I guess much of my approach is still influenced by many years of making beats with a more traditional setup. That might change though...\\n\\n**What functions and coding approaches do you like to use?**  \\n\\nI am really into chord voicings and \\"harmony hacking\\". While I also like music with simpler / less / no chords,\\nI sometimes miss the rich harmonic colors of the past. Writing (and changing) chord progressions in a DAW can be tedious, which is probably one of the reasons why they faded in general. If you don\'t play the piano fluently, you cannot quickly jot it down.. In a live coding setting, chord progressions and voicings can be automated and simulated, which has great potential. This is especially fun with arpeggios, for example:\\n\\n```js\\n\\"<C^7 Dbo7 Dm7 C7>\\"\\n  .voicings(\'lefthand\') // voice chords\\n  .arp(\\"0 3 <2 0> [1 3]\\".iter(4))\\n  .add(perlin.range(0,.5))// pitch warble\\n  .add(\\"<0 12>/16,.1\\") // hippie chorus\\n  .sometimes(add(\\"12\\")) // vary octaves\\n  .almostNever(ply(\\"2\\")) // little rhythmic glitches\\n  .note().s(\'sine\')\\n  .decay(.125).gain(.8)\\n  .sustain(sine.range(0,.5).slow(32))\\n  .jux(rev).room(.8).fast(3/4)\\n```\\n\\n[Open in Strudel REPL](https://strudel.tidalcycles.org/?UPR-AlXfgSnh)\\n\\nA while back I wrote 2 posts about [voicing dictionaries](https://loophole-letters.vercel.app/rhythmical-chords) and [voicing permutation](https://loophole-letters.vercel.app/voicing-permutation), which now partly found their way into Strudel.\\n\\n**Do you use Tidal with other tools / environments?**  \\n\\nMost of the time, I use Strudel to write Tidal patterns. Sometimes I visit my friend [Lui Mafuta](https://soundcloud.com/luimafuta) where I use livecode stuff via MIDI. It\'s also fun to add [some trumpet notes on top](https://www.youtube.com/watch?v=IcMSocdKwvw).\\n\\n## Tidal Contributions  \\n\\n**How do you contribute to Tidal Cycles? What have you worked on?**  \\n\\nIn the last year, I was all in on developing Strudel!\\nI was exciting to see this lovely thing grow into what it is now.\\nMaybe you\'re interested in [the whole story](https://loophole-letters.vercel.app/strudel) and the [recap after 1 year](https://loophole-letters.vercel.app/strudel1year).\\n\\n**What led you to work on Tidal?**\\n\\nLong before I found Tidal, I wanted to build a hackable backing track player. I\'ve spent many hours practising the trumpet using iReal Pro, which is a popular practise software in the jazz / pop / improvised music sphere. I always dreamed of a software that could generate such tracks from minimal input (just chord progressions) whilst being able to freely control the musical style. After having built [several](https://felixroos.github.io/jazzband/) [prototypes](https://felixroos.github.io/color-tunes/), I still was not satisisfied. Luckily, I found Tidal and its emerging JavaScript port, whose flexible abstractions are perfect to implement such a thing.\\nBeing more involved in computer music now (practising trumpet less :P), the dream from a hackable backing track player morphed into a more general dream of an instrument that allows improvising electronic music, which is already becoming a reality!\\n\\n## Music  \\n\\n**Tell us about your livecoding music.**  \\n\\nI am still dipping my toes in, so far I am mostly translating and recontextualize things I\'ve done prior to livecoding.\\nFor example, I\'ve created a video album of [hip hop beats created with strudel](https://www.youtube.com/watch?v=KEndMf5udEw&list=PL7oyavMs9sS9gLY8TR6n4ILi-_5uq5ix8).\\nApart from that, I really like making music with frequencies only, mostly [using pure intervals](https://strudel.tidalcycles.org/?uFDgT5d4pL_0).\\n\\n**How has your music evolved since you have been livecoding?**  \\n\\nI am starting to appreciate the glitch! It will probably get worse..\\n\\n**What samples or instruments do you like to work with?**  \\n\\nSamplewise, I love to sample single notes and sounds of old recordings, for example, I\'ve used [the first note of this lovely album](https://www.youtube.com/watch?v=jaWdVJO5H98) for the `pluck` sound in the last link above.\\nHigh quality sample banks are cool, but there is something special about single sample repitches, maybe they just trigger tiny doses of nostalgia to my inner child, which consumed wavetable synthesis while playing super nintendo for hours.\\n\\n**What projects are you currently working on or planning? What\'s next?**  \\n\\nStill busy hacking on Strudel! I am not the type to plan too far ahead, but I am excited of what\'s to come\\n\\n### Links to your music / recorded livecoding sessions\\n\\n- [My Strudel Pattern Swatch](https://felixroos.github.io/strudel/swatch/)\\n- [YouTube](https://www.youtube.com/channel/UCCzL14wczvJyJaVYjh4nfJQ)\\n- [Algo10 Stream](https://www.youtube.com/watch?v=IcMSocdKwvw)\\n- [Solstice Night 2022 Stream](https://www.youtube.com/watch?v=P1DDsOvcyco)\\n- [My Blog](https://loophole-letters.vercel.app/)\\n\\nSome non-livecoded music I did as Puste using mostly the trumpet:\\n\\n- [Karbana - Showers And Storms (Lui Mafuta & Puste Brass Version)](https://soundcloud.com/friendlyconnections/karbana-showers-and-storms-1?in=luimafuta/sets/remixes)\\n- [Klangdruide - A Spoon Full Of Honey (Lui Mafuta & Puste Remix)](https://soundcloud.com/hugrecords/klangdruide-spoon-full-of-honey-lui-mafuta-puste-remix?in=luimafuta/sets/remixes)\\n- [Kunterwei\xdf - Manne im Theater (Puste Edit)](https://soundcloud.com/ketoga/kunterweiss-manne-im-theater)\\n- [Lui Mafuta & Puste - Secret Spot EP](https://open.spotify.com/album/5MI78yNDgbhhxa2uA9CLot)\\n\\n### Thanks\\n\\nLast but not least huge thanks to all the people that are part of this space!\\nSpecial thanks to Alex for building not only Tidal as a software but also as a community, making the world of digital music making a little less boring, one cycle at a time :)\\n\\n![guy with fatty hair](https://i.imgur.com/QNLKOeC.jpg)\\n\\nComments: [Club Tidal Forum Thread](https://club.tidalcycles.org/t/tidal-cycles-blog-returns-profile-from-froos/4577/10?u=highharmonics) |"},{"id":"/tidal_profile_polymorphic_engine","metadata":{"permalink":"/blog/tidal_profile_polymorphic_engine","editUrl":"https://github.com/tidalcycles/tidal-doc/tree/main/blog/blog/tidal_profile_polymorphic_engine.md","source":"@site/blog/tidal_profile_polymorphic_engine.md","title":"Tidal Profile - polymorphic_engine","description":"| Tidal Cyclist  | Martin Gius   |","date":"2023-03-13T00:00:00.000Z","formattedDate":"March 13, 2023","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Tidal Profile - polymorphic_engine","date":"2023-03-13T00:00:00.000Z"},"prevItem":{"title":"Tidal Profile - froos","permalink":"/blog/tidal_profile_froos"},"nextItem":{"title":"Tidal Profile - Pondskater (aka Axel Ganz)","permalink":"/blog/tidal_profile_pondskater"}},"content":"| Tidal Cyclist  | Martin Gius   |\\n| --------:    | :---------- |\\n| aka    | polymorphic_engine |\\n| Location | Vienna |\\n| Years with Tidal | 3  yrs |\\n| Other LiveCoding env | SuperCollider, Hydra, ORCA  |\\n| Music available online | [Bandcamp](https://flimmerhaar.bandcamp.com/album/cilia) |\\n| Code online | [GitHub](https://github.com/polymorphicengine) |\\n| Other music/audio sw | Reaper, PureData, Audacity|\\n| Comments | [Club Tidal Forum Thread](https://club.tidalcycles.org/t/new-blog-profile-polymorphic-engine/4616) |\\n\\n\\n## Livecoding  \\n\\n**What do you like about livecoding in Tidal? What inspires you?**   \\n\\nI find the way Tidal allows me to approach music in a structural way fascinating. I like it\'s concise but still verbose syntax, especially combined with the mini-syntax.\\n\\n**How do you approach your livecoding sessions?**\\n\\nWhen I make music on my own, I like to start out with simple rhythmic patterns and start to layer them with different versions of themselves (slower & lower / faster & higher / ..). Now apply the MI clouds effect and you can have fun for hours adjusting the parameters! *(Note: see the clouds section in the [Mi-UGens page](https://tidalcycles.org/docs/reference/mi-ugens#clouds-global) of the User docs.)*\\n\\nI also like to use a traditional game controller and map the controls to conditional functions or effects in the code. For example, playing a drum pattern twice as fast when I press the \'A\' button, or adjust the pan according to a joystick. I like the thought that I am programming the functionality of a game live, while I am also playing it.\\n\\n**What functions and coding approaches do you like to use?**  \\n\\nProbably my most used Tidal functions are `layer` and `while`. I also use the control bus feature a lot to manipulate the FX of longer sounds. I really like how randomness in Tidal works and how easy it is no generate arbitrary, but repeating sequences or rhythms.\\n\\nHere is an example of a jungle inspired, abstract dance track. To make a four cycle loop, evaluate the line\\n\\n```haskell\\nall $ timeLoop 4 . (rotL 4)\\n```\\n\\nand change the number in rotL to shift the pattern. Try to play around with the parameters of the clouds effect aswell, but be careful, it might get loud! :)\\n\\n```haskell\\nlet\\nsetbpm x = setcps (x/60/4)\\n_add :: Time -> Pattern a -> Pattern a -> Pattern a\\n_add t value pat = slow (pure $ 1+t) $ timeCat [(shift,pat),(1-shift, value)]\\n\\t\\t\\t\\twhere shift = 1 / (t + 1)\\nadd :: Pattern Time -> Pattern a -> Pattern a -> Pattern a\\nadd pt x y = innerJoin $ fmap (\\\\t -> _add t x y) pt\\n\\nsetbpm 160\\n\\nall $ timeLoop 4 . (rotL 4)\\n\\nall $ id\\n\\nd1\\n$ while \\"t(4,16)\\" (|+ krush 1)\\n$ while \\"[0 | 1]*16\\" (superimpose (plyWith 4 (|* speed 1.25) . slow 2))\\n$ layer [id\\n\\t\\t,\\\\x -> degradeBy (segment 16 perlin)\\n        \\t$ slow 2\\n            $ x\\n            # speed 0.75\\n            # shape 0.1\\n        ,\\\\x -> add \\"[0.5 | 0.25]*4\\" (s \\"jungbass:1\\" # speed 0.8 # shape 0.2 # krush 2)\\n        \\t$ x # speed \\"[2 | -2]*8\\"\\n\\t\\t]\\n$ s \\"[drum drum:1 [~ drum] drum:1, drum:3*[[8 | 16]*4]]\\"\\n# krush 2\\n# cloudswet 1\\n# cloudsgain 1\\n# cloudspitch (segment 16 $ smooth \\"[-1 | 1 | 0]*16\\")\\n# cloudstex (segment 16 $ smooth \\"[0.3 | 0.1 | 0.9]*4\\")\\n# cloudspos \\"[0 | 1]*8\\"\\n# cloudssize 0\\n# cloudsfb 0.3\\n# cloudsspread 0\\n# cloudsdens 0\\n# cloudsrvb 0\\n# cloudsfreeze 0\\n```\\n\\n**Do you use Tidal with other tools / environments?**\\n\\nI like to use Tidal together with Hydra and Vimix and like to use a game controller for external hardware.\\n\\n## Tidal Contributions  \\n\\n**How do you contribute to Tidal Cycles? What have you worked on?**  \\n\\n* I had the opportunity to work on Tidal as part of the Haskell Summer of Code 2021. There, I mainly worked on packaging Tidal to allow users to use it without an installation of the whole Haskell environment. This led to me developing a whole code [editor/interpeter](https://github.com/polymorphicengine/tidal-gui) with some features especially designed for Tidal, like the display of which patterns are playing/muted, the current cps/bpm and the ability to control all features of the editor via OSC.\\n\\n* I\'m also working on the [tidal-listener](https://github.com/tidalcycles/Tidal/tree/main/tidal-listener) which also provides a standalone intrepreter that editor plugins etc. can use as an alternative to ghci.\\n\\n* Now I am mostly working on things that are related to the mini-notation and how it is parsed and interpreted. Most notably, I found a way to make the chord notation patternable and made it easier to add new custom chord modifiers.\\n\\n**What motivates you to work on Tidal?**   \\n\\nCuriosity of the inner workings of Tidal and the great community!\\n\\n## Music  \\n\\n**Tell us about your livecoding music.**  \\n\\n* I often improvise together with people who play more traditional instruments. I find it very interesting to use microphones to get what the others are playing as an input that I can manipulate through coding.\\n* I\'m also interested in multi-channel sound / acousmatic music and the possibilities of live-coding in this context. I think live-coding could be a great tool to be able to precisely control an acousmonium (a speaker orchestra, where each speaker has it\'s seperate channel). This means to not just make the sounds that are being heard, but also to distribute them across the speakers in real-time (this is often called diffusion).\\n\\n**What samples or instruments do you like to work with?**  \\n\\nRecently, I like to use very tiny grains of samples and process them with Tidal. What I like about this approach is that it is easy to manipulate and add effects to each grain individually. I also like to record my own samples with various microphones.\\n\\n**What projects are you currently working on or planning? What\'s next?**  \\n\\n* I would like to work on a bigger scale AV performance using Tidal, Hydra and Vimix together, to create something like a short film.\\n* I\'m also working on an interactive sound installation where I will probably use Tidal to generate the sound.\\n* I\'m working on a new acousmatic piece for a composition competition.\\n\\n### Links to your music / recorded livecoding sessions:\\n- [Bandcamp](https://flimmerhaar.bandcamp.com/album/cilia)\\n- [Acousmatic Music](https://www.youtube.com/watch?v=ieQ7fA7ah3s)\\n- [Algo10](https://www.youtube.com/watch?v=-oMwPdgxqiI)\\n- [Linktree](https://polymorphicengine.github.io/)\\n\\n\\n### Other  \\n\\nI\'m currently working on a live-coding language that will extend the mini-notation to a full programming language. It is still in early development, but maybe somebody is interested in helping me out! I\'m working on it [here](https://github.com/polymorphicengine/minilambda/tree/types).\\n\\n<img src={require(\'./polymorphic_engine_blog_picture.jpg\').default} alt=\\"youth photo with computer\\" width=\\"600\\" />\\n\\nComments: [Club Tidal Forum Thread](https://club.tidalcycles.org/t/new-blog-profile-polymorphic-engine/4616)"},{"id":"/tidal_profile_pondskater","metadata":{"permalink":"/blog/tidal_profile_pondskater","editUrl":"https://github.com/tidalcycles/tidal-doc/tree/main/blog/blog/tidal_profile_pondskater.md","source":"@site/blog/tidal_profile_pondskater.md","title":"Tidal Profile - Pondskater (aka Axel Ganz)","description":"| Tidal Cyclist  |  Pondskater (aka Axel Ganz)   |","date":"2023-03-10T00:00:00.000Z","formattedDate":"March 10, 2023","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Tidal Profile - Pondskater (aka Axel Ganz)","date":"2023-03-10T00:00:00.000Z"},"prevItem":{"title":"Tidal Profile - polymorphic_engine","permalink":"/blog/tidal_profile_polymorphic_engine"},"nextItem":{"title":"Tidal Profile - ndr_brt","permalink":"/blog/tidal_profile_ndr_brt"}},"content":"| Tidal Cyclist  |  Pondskater (aka Axel Ganz)   |\\n| --------:    | :---------- |\\n| aka | ganz |\\n| Location | D\xfcsseldorf, Germany and Telavi, Georgia |\\n| Years with Tidal | 3 yrs |\\n| Other LiveCoding env | SonicPi, Hydra |\\n| Music available online | [Bandcamp](https://pondskater-music.bandcamp.com/) |\\n| Other music/audio sw | Audacity, Ableton Live with Granulator 2 and Wavetable |\\n| Hardware | Sequential Circuits Six-Trak, Faderfox PC4 |\\n\\n<img\\n  src={require(\'./aganz.jpg\').default}\\n  alt=\\"pondskater with controller\\"\\n  width=\\"600\\"\\n/>  \\n\\n(photo: Heike Kurth)\\n\\n## Livecoding  \\n\\n**What do you like about livecoding in Tidal? What inspires you?**   \\n- Although I have been making electronic music for decades, I have never been the analytical type of music producer. I have always found it difficult to create more complex rhythmic structures and work out arrangements. And although I am not a developer and have no knowledge of programming at all, I was able to get into TC very quickly and find the approach very intuitive. In particular, I now find it easy to create complete rhythmic structures. Sometimes I don\'t know exactly what I\'m doing, but some results speak for themselves. This fascinates and motivates me, even after three years. Tidal never gets boring. Besides, I have always been interested in new approaches and new musical territory. Live coding offers a great and ever-expandable field of experimentation.\\n\\n**How do you approach your livecoding sessions?**  \\n- I usually start with a new feature, or an example or snippet of a new feature. I read a lot in the Tidal Club and often find inspiration in other people\'s questions and examples. Since my repertoire of tracks has been growing, I\'ve also started to put key elements of previous tracks that I particularly like back on the dissecting table of my editor and vary them again and again. Variation, variation, variation. And - after three years, I find that my code tends to get simpler - but in do blocks.\\n\\n**What functions and coding approaches do you like to use?**  \\n- I am a fan of `echoWith, chop, degradeBy, repeatCycles, mask`. And it changes. Some days ago I was very busy with `while` which I now rediscover. Now I like `cat` combined with euclidian rhythms very much.\\n\\n```haskell\\nd1 $ slow 2 $ cat [s \\"tabla:04(3,8) tabla:04(5,8)\\"] # gain 0.9 # speed 0.25\\nd2 $ cat [s \\"kick(3,8)\\", \\"kick(2,8)\\", \\"kick(3,8)\\"]\\n```\\n\\nI also like to work with isorhythms, especially to get a tonal dynamic into a percussion pattern.\\n\\n```haskell\\nd1 $ struct \\"7(7,8)\\" $ sound \\"tah\\" # nCountTo \\"list\\" \\"<7 7 7 7 7 8 9>\\"\\n    # gain 0.9 # room 0.3 # size 0.5 # speed 0.5\\n    # shape (slow 4 $ range 0.0 0.5 tri)\\n    # pan (slow 2 $ range 0.1 0.9 saw)\\n```\\n\\nRecently I started to experiment with @jwaldmann\'s fantastic random-not-random ideas.\\nhttps://club.tidalcycles.org/t/random-not-random/4522\\n\\n```haskell\\ndo\\nlet scale = getScale (scaleTable ++ [(\\"wavemorphian\\", [3,7,8,10,11])])\\nd1 $ s \\"r808(5,8)\\" # gain 0.9 # room 0.5 # size 0.9\\nd2 $ jux rev $ stack [\\n            n ( scale \\"wavemorphian\\" $ cat $ replicate 8 $ segment \\"<4>\\" $ irand 5) # s \\"sxt22\\" # gain 0.5\\n           ,n ( scale \\"wavemorphian\\" $ cat $ replicate 8 $ segment \\"<4>\\" $ irand 5) # s \\"sxt31\\" # gain 0.5\\n           ,n ( scale \\"wavemorphian\\" $ cat $ replicate 8 $ segment \\"<4>\\" $ irand 5) # s \\"sxt50\\" # gain 0.5 # legato 1.25\\n           ,n ( scale \\"wavemorphian\\" $ cat $ replicate 8 $ segment \\"<2>\\" $ irand 5) # s \\"sxt31\\" # gain 0.6 # speed 2.0\\n           ,n ( scale \\"wavemorphian\\" $ cat $ replicate 8 $ segment \\"<3>\\" $ irand 5) # s \\"sxt42\\" # gain 0.5 # speed 2.0\\n           ,n ( scale \\"wavemorphian\\" $ cat $ replicate 8 $ segment \\"<1>\\" $ irand 5) # s \\"sxt60\\" # gain 0.7 # speed 2.0 # nudge 0.25\\n           ,n ( scale \\"wavemorphian\\" $ cat $ replicate 4 $ segment \\"<1>\\" $ irand 5) # s \\"sxt69\\" # gain 0.7 # speed 2.0 # nudge 0.675\\n           ] # room 0.5 # size 0.9\\n```\\n\\nIn this context, perhaps this could also be interesting: [Elizabeth Margulis On Repeat: How Music Plays the Mind](http://www.elizabethmargulis.com/on-repeat)  \\n\\n**Do you use Tidal with other tools / environments?**  \\n- In the beginning, I really wanted to use Tidal to control hardware synthesizers (Six-Trak, Juno 106, etc.), based on sonic demands. In the meantime, I have largely discarded this approach. Instead, I create a sound on the Six-Trak, then sample a chromatic octave and continue working with these samples directly in TC. The many possibilities of sample chopping and editing functions within TC offer many more sonic possibilities that I don\'t have within the hardware. I also like to use a hardware controller to adjust parameters live in Tidal.\\n\\n## Tidal Contributions  \\n\\n**How do you contribute to Tidal Cycles? What have you worked on?**  \\n- Since I don\'t have a clue about Haskell, I can\'t directly contribute to the further development of Tidal. I can only share my experiences as a user, which I do e.g. at Toplap D\xfcsseldorf meetups. I also try to contribute to the development of the community and the use of Tidal Cycles by planning and running livecoding events and LiveCoding beginners workshops in D\xfcsseldorf, Germany and in Tbilisi, Georgia. Not least for this reason, I would now like to take a look at Strudel.\\n\\n**What motivates you to work on Tidal?**   \\n- Basically, it\'s the curiosity to scratch musical boundaries and - if it goes well - to enter new musical terrain here and there.\\n\\n**Future perspectives**\\n- Yaxu\u2019s [Learning Tidal Cycles Course](https://tidalcycles.org/docs/patternlib/tutorials/course1) was my general door opener to using Tidal. Thank you so much for this wonderful introduction, @Yaxu! And since then the [Tidal Club](https://club.tidalcycles.org/) is a permanent resource of knowledge, which I receive as a great gift at any time. I hereby expressly would like to thank the entire Tidal community!\\n\\n- On the other hand, many more advanced techniques and knowledge about Haskell and Tidal have remained hidden from me until now. For example, the type signatures are still a mystery to me. I can\'t really use them. I could imagine that I\'m not the only musician who likes to work with Tidal but has no basic knowledge of programming or Haskell and would welcome the opportunity for some kind of further self-help training.\\n\\n## Music  \\n\\n**Tell us about your livecoding music.**  \\n- It\'s never easy to talk about your music. I think I hang somewhere in between. Between dancefloor music on the one hand and really abstract conceptual contemporary music on the other. My music is certainly more influenced by a pop music context than an academic one. Maybe you could call it downbeat electronic, somehow influenced by industrial and IDM. I want to counterbalance this with a certain melodic touch and erratic voices.\\n\\n**How has your music evolved since you have been livecoding?**  \\n- Hm, I hope that since then at least the rhythms have become a bit more interesting.\\n\\n**What samples or instruments do you like to work with?**  \\n- In order not to succumb to the danger of repeating classic analogue sounds over and over again, I process the Six-Trak sounds in Robert Henke\'s Granulator 2 within Live. Alternatively, I now also create sounds and loops with the Ableton Live Wavetable Synthesizer.\\n\\n**What projects are you currently working on or planning? What\'s next?**  \\n- I thought I should take the opportunity of the proximity of this years ICLC in Utrecht, so I am currently planning a small live tour of Europe for April and May. I am also helping to organize another satellite event on 05 and 06 May 2023 in D\xfcsseldorf. After that I would like to finally try the MrReason\'s [Tidal Looper](https://github.com/thgrund/tidal-looper).\\n\\n### Links to your music / recorded livecoding sessions:\\n- https://pondskater-music.bandcamp.com/\\n- https://www.instagram.com/pondskater_music/\\n- https://www.youtube.com/@toplapddorf/streams\\n- [Solstice Stream - Dec 2022](https://www.youtube.com/watch?v=9i_7vZgVXsw&list=PLMBIpibV-wQIdS6D1vdijRZPfLBrRP9A_&index=25&t=933s)\\n- [Toplap D\xfcsseldorf Stream 31.12.2021](https://www.youtube.com/watch?v=UA7Ca6gaSvc&t=974s)\\n- [Toplap D\xfcsseldorf Concert 29.10.2021](https://www.youtube.com/watch?v=qGXQVNUWFc0&t=1845s) from about minute 31:30:"},{"id":"/tidal_profile_ndr_brt","metadata":{"permalink":"/blog/tidal_profile_ndr_brt","editUrl":"https://github.com/tidalcycles/tidal-doc/tree/main/blog/blog/tidal_profile_ndr_brt.md","source":"@site/blog/tidal_profile_ndr_brt.md","title":"Tidal Profile - ndr_brt","description":"| Tidal Cyclist  |  ndr_brt   |","date":"2023-03-03T00:00:00.000Z","formattedDate":"March 3, 2023","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Tidal Profile - ndr_brt","date":"2023-03-03T00:00:00.000Z"},"prevItem":{"title":"Tidal Profile - Pondskater (aka Axel Ganz)","permalink":"/blog/tidal_profile_pondskater"},"nextItem":{"title":"Tidal Profile - BuboBubo (Rapha\xebl Maurice Forment )","permalink":"/blog/tidal_profile_bubobubo"}},"content":"| Tidal Cyclist  |  ndr_brt   |\\n| --------:    | :---------- |\\n| Location | Italy |\\n| Years with Tidal | 4  yrs |\\n| Other LiveCoding env | Hydra, Supercollider, Threnoscope, ByteBeat |\\n| Music available online | [Bandcamp](https://umanoudito.bandcamp.com/) |\\n| Code online | [GitHub](https://github.com/ndr-brt/sc-adente) |\\n| Other music/audio sw | sox, ffmpeg, Ardour, Audacity |\\n\\n## Livecoding  \\n\\n**What do you like about livecoding in Tidal? What inspires you?**   \\n- When I met it for the first time everything was a wow, the cycle concept, function composition, mini-notation, patternization...\\nNowadays I\'m still able to find inspiration watching other people livecoding or reading the posts on tidal club, especially when there are custom functions listed.\\n\\n**How do you approach your livecoding sessions?**  \\n- I always try to start from scratch, when I code alone I usually focus on a single function and try to get everything out of it, while I\'m in front of an audience I just go with the flow.\\n\\n**What functions and coding approaches do you like to use?**\\n- I\'m a huge fan of `superimpose` (used with the `si` shortand), especially mixed with `hurry`, in my \\"single sample runs\\" I create layers of the same sample playing at different speed/density to create rhythm and melodic patterns.\\nFor example:\\n```haskell\\nlet sh t f p = superimpose ((hurry t).f) p\\n\\nd1\\n  $ sh 5 id\\n  $ sh \\"e\\" id\\n  $ sh 3 id\\n  $ s \\"sine\\"\\n```\\n\\nthis is a really simple example, and from here you can start and mixup all sort of other functions, I also love `chunk`, that moves things a lot:\\n```haskell\\nd1\\n  $ chunk 7 (|* speed 1.5)\\n  $ sh 5 id\\n  $ sh \\"e\\" id\\n  $ sh 3 id\\n  $ s \\"sine\\"\\n```\\n\\nThe fun is that, if you replace `sin` with, for example, a percussive sample like `bd`, here you have a nice drum pattern.\\n\\nThen to completely unhinge the structure, `chew` and `bite` are also good friends:\\n```haskell\\nd1\\n  $ chew 4 (iter 3 \\"3 1 0\\")\\n  $ chunk 7 (|* speed 1.5)\\n  $ sh 5 id\\n  $ sh \\"e\\" id\\n  $ sh 3 id\\n  $ s \\"sine\\"\\n\\n-- or\\n\\nd1\\n  $ bite 4 (iter 5 \\"3 0 1\\")\\n  $ chunk 7 (|* speed 1.5)\\n  $ sh 5 id\\n  $ sh \\"e\\" id\\n  $ sh 3 id\\n  $ s \\"sine\\"\\n```\\n\\nI often try to escape from this mindset but at the end I fall into it most of the times.\\n\\n**Do you use Tidal with other tools / environments?**\\n- I tried it to control some drum machines circuit bent by me but at the end I find the hardware overcomplicated and I prefer to play soft-synths, especially Supercollider: everything in a box and controllable with the keyboard.\\n- I used Tidal also to [draw stuff with p5 during some sessions](https://www.youtube.com/watch?v=lbUCSVC4GPs).\\n\\n## Tidal Contributions  \\n\\n**How do you contribute to Tidal Cycles? What have you worked on?**\\n- I learned Haskell only to contribute to Tidal. I\'m passionate about reading code and get the insights of the software, on the main codebase I solved some bugs and added some features mainly in the mini-notation section ([tidal commits](https://github.com/tidalcycles/Tidal/commits?author=ndr-brt)).\\n- I took care of the migration from Travis CI to GitHub Actions.\\n- Atom -> Pulsar: At a certain point I noticed that the Atom Plugin was practically unmaintained so I proposed to be its maintainer, and I brought it back on track. Now Atom has been disbanded but luckily the Pulsar community is vibrant and the Tidal plugin is already fully compatible with it. It was a pretty satisfying migration ([Pulsar-tidalcycles](https://github.com/tidalcycles/pulsar-tidalcycles)).\\n\\n**What motivates you to work on Tidal?**\\n- Not to be selfish but most of the work I did had direct impact on the use I\'m doing of Tidal, I guess because it\'s easy to contribute when you know why something needs to be improved/fixed.\\n\\n\\n## Music  \\n\\n**Tell us about your livecoding music.**\\n- Well, most of the time it is noisy, sometimes mellow, always not danceable.\\n\\n**How has your music evolved since you have been livecoding?**\\n- For sure it changed, I\'m not sure it \\"evolved\\", sometimes I think I was more creative when I was learning how to use the instrument, now it\'s easier to get into the loop of being repetitive.\\n\\n**What samples or instruments do you like to work with?**\\n- I try not to use the default samples nor the default synths, I sometimes write my own synths, sometimes I record my own samples or I get them from various sources.  \\n\\n**What projects are you currently working on or planning? What\'s next?**\\n- I recently finished a record that was a collaboration with Naotodate, that\'s a non-livecoding noise friend from Italy ([on bandcamp](https://umanoudito.bandcamp.com/album/a-letter-is-a-number-a-feeling-is-a-code)).\\n- Now I\'m working to another collaboration record, this time with ETOL, an amazing italian livecoder. To be fair the project it is still in an embryonic state.\\n\\n\\n### Links to your music / recorded livecoding sessions:\\n- [Bandcamp](https://umanoudito.bandcamp.com/)\\n- [YouTube](https://www.youtube.com/@ndrbrt) (not only livecoding) - here are a few of them using TidalCycles\\n  - [single sample run #4: gtr [u-mano u-dito]](https://www.youtube.com/watch?v=XYk096aDOcU&t=54s)\\n  - [single sample run #6: uxay [u-mano u-dito]](https://www.youtube.com/watch?v=CrOfleUR5-c)\\n  - [TidalCycles + Mutable Instruments Clouds droning sounds](https://www.youtube.com/watch?v=Zk3ICtit3tM)\\n  - [Pinging filters](https://www.youtube.com/watch?v=3vUXVsh0ICY)\\n- [Soundcloud](https://soundcloud.com/umanoudito) (not really updated)\\n\\n### Other  \\n- I\'m a software engineer by day and a punk \\"musician\\" by night, I played and still play guitar/drums/bass in various bands\\n- I\'m also part of Toplap Italia, I organize livecoding shows sometimes\\n- I\'ve been a Linux user for like 20 years\\n- I like diy electronics, circuit bending and fixing broken stuff found in the trash\\n- Either I talk too much or I don\'t talk at all"},{"id":"/tidal_profile_bubobubo","metadata":{"permalink":"/blog/tidal_profile_bubobubo","editUrl":"https://github.com/tidalcycles/tidal-doc/tree/main/blog/blog/tidal_profile_bubobubo.md","source":"@site/blog/tidal_profile_bubobubo.md","title":"Tidal Profile - BuboBubo (Rapha\xebl Maurice Forment )","description":"| Tidal Cyclist  | Rapha\xebl Maurice Forment |","date":"2023-02-28T00:00:00.000Z","formattedDate":"February 28, 2023","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Tidal Profile - BuboBubo (Rapha\xebl Maurice Forment )","date":"2023-02-28T00:00:00.000Z"},"prevItem":{"title":"Tidal Profile - ndr_brt","permalink":"/blog/tidal_profile_ndr_brt"},"nextItem":{"title":"Tidal Profile - tedthetrumpet (J Simon van der Walt)","permalink":"/blog/tidal_profile_tedthetrumpet"}},"content":"| Tidal Cyclist  | Rapha\xebl Maurice Forment |\\n| --------:    | :---------- |\\n| aka    | BuboBubo |\\n| Location | Lyon/Paris, France |\\n| Years with Tidal | 4 yrs |\\n| Other LiveCoding env | SuperCollider, ORCA, FoxDot |\\n| Music available online | [Bandcamp](https://bubobubo.bandcamp.com/album/archive-grrrnd-zero) |\\n| Code online | [GitHub](https://github.com/Bubobubobubobubo) |\\n| Other music/audio sw | SuperCollider, MaxMSP, SunVox, VCVRack |  \\n\\n<img src=\\"https://cookie.paris/static/2691e91b9da74087ddb672eb917bec9e/04f58/8.webp\\"  width=\\"600\\" height=\\"450\\" />\\n\\n## Livecoding  \\n\\n**What do you like about livecoding in Tidal? What inspires you?**   \\n\\nTidalCycles taught me a lot about music and improvisation. I used not to care too much about rhythm and structures when improvising. The emphasis that Tidal is putting on rhythm can actually be beneficial. It pushes you to explore some aspects of music you might be neglecting: complex time signatures, intriguing rhythms, etc... I also like the fact that it feels like a \\"metaphoric\\" language to talk about music that ends up taking shape while typing on the keyboard. Making music with Tidal, you quickly start to put a name on specific patterning concepts.\\n\\nTidal is also super fun: I usually have a great time when improvising during a jam session using it, especially when it blends with other non algorithmihc instruments :)\\n\\n**How do you approach your livecoding sessions?**  \\n\\nI like to setup a system that I find interesting or playful. I spend quite some time organising my instruments, effects, mixing desk, controllers, etc... Whenever I find a system that I find interesting to play with, I\'m generally not preparing much more. I know that music will just flow if I really start improvising and exploring the system. I just start tinkering to discover what I have on my hands. Preparing such systems takes most of my time before gigs. I think that I\'ve never played twice with the same exact setup!\\n\\nI really like jamming with friends as well without preparing much, using my own collection of audio samples. When coding alone, you almost mechanically end up doing too much for your own sake. Friends will not allow such things to happen. You must listen and adapt! Nowadays, synchronizing Tidal with pretty much anything has also became much more simpler than it used to be. One more reason to do it!\\n\\nOne other thing is that.. I usually don\'t record my stuff! I play live, and then boom, I\'m gone. Live coding is great because it\'s ephemeral. Once you stop coding, you should start again to get the same result.. except it\'s never the same.\\n\\n**What functions and coding approaches do you like to use?**  \\n\\nI\'m not very good at learning the standard library, which is why I ended up writing documentation to actually discover more of it! I have some techniques I always like to play with:\\n* playing with a large collection of samples, without ordering or sorting them beforehand. Iterating through a directory, finding iterations that sound good.\\n* writing structures: using `cat`, `ur`, `stack`, etc...\\n* Nesting groupings (`[]`) and using `<>` a lot to get the most out of patterns that are short to write.\\n* using `superimpose` and `sometimes` too much, to the point where your pattern ends up being a totally different thing compared to what you started with.\\n* *soloing* by just writing a one-note pattern that I edit really fast.\\n\\nSome people use extensive collections of custom functions. I never could quite grasp Haskell, so I ended up maximising what I truly understood in the language!\\n\\n**Do you use Tidal with other tools / environments?**  \\n\\nAll the time. I usually separate my orbits (stereo tracks) to a DAW or to another software for post-processing. I end up adding some controls to Tidal to control send/returns and effects without leaving the keyboard. Tidal is now also one of my favorite way to interact with any piece of gear that I can lay my hands on.\\n\\n\\n## Tidal Contributions  \\n\\n**How do you contribute to Tidal Cycles? What have you worked on?**  \\n\\nI used to contribute a lot to the documentation ~1 year ago. When I first started playing with Tidal, all the good stuff was documented in the old wiki website. My first \\"invisible\\" contribution was to write some amount of french translation that wasn\'t easily accessible because the system had its quirks. When the new website suddenly appeared, I ported most of the old website to the new website, reorganising pretty much everything to my liking :)\\n\\nI was very cautious, trying to make information easy to discover, specifically because I spent so much time digging in the past! This effort has now turned into a very healthy collective effort and the Tidal documentation is something to proud of for everyone who contributed to it!\\n\\n**What motivates you to work on Tidal?**   \\n\\nNowadays, I don\'t contribute that often by writing/coding stuff so I can\'t say that I\'m motivated to make the system any better! However, I really love to teach Tidal whenever I can. I had the opportunity to teach it in a graduate class at my current university. I also teach Tidal to whoever is interested and sometimes during formal/informal workshops, etc...\\n\\n## Music  \\n\\n**Tell us about your livecoding music.**  \\n\\nI love it when the music I play serves as an outlet and a release. I don\'t really play the music I enjoy listening which is something that I always found intriguing... I\'ve learned to somehow accept it. I usually listen to folk / rock music with a fair amount of jazz but what I love playing the most with Tidal is hard/fast rhythmic music! Meaning a deluge of drums, saturation and distortion, mangled samples, etc... I also think that Tidal forces you to go in that direction but it\'s a topic for another day!\\n\\n**How has your music evolved since you have been livecoding?**  \\n\\nIt changed a LOT about the way I approach music-making. Before I started learning Tidal, I had a mild interest in computers and synthesizers. Nowadays, I\'m living in a room full of audio cables / computers. Tidal was very influencial in the way I think about music, but that\'s also because I\'ve read a lot of the things Alex wrote about livecoding / Tidal. The most important thing that Tidal has taught me is that algorithmic music can actually be simple. Its simplicity is what allows you to go deep, by combining simple ideas and processes and ending up with fascinating results.\\n\\nI also don\'t play much piano anymore, and it forced me to pick up my guitar again... just to stretch my fingers after typing so much on a keyboard!\\n\\n**What samples or instruments do you like to work with?**  \\n\\n* I like \\"joke\\" samples. I ended up soloing with the sound of my oven cooking a pizza a few months ago. `crow`, without doubt, is the best audio sample in the default library. By trying hard enough, you can make them sound like the best thing you\'ve ever heard, or fail!\\n* Nowadays, I\'m specifically looking for instruments with few parameters to tweak. Few parameters means that you are more likely to remember all of them when writing a pattern!\\n* I feel like I\'m repeating myself but: large collections of unsorted samples!\\n\\nSometimes, I also try to play with having the minimum amount of control on the Tidal side and relying more on real instrumentst that I can tweak with my hands: modular synthesizers (sending CV and GATE only), drum machines, etc... It feels more natural to launch a pattern and to tweak its output afterhands.\\n\\n**What projects are you currently working on or planning? What\'s next?**  \\n\\nI\'m working on my PhD manuscript... which is about live coding! I\'ve been studying live coding languages and techniques for quite some time now and I\'m trying to write about this delicate topic by giving it justice! It\'s an incredibly dense topic and I feel inclined not to give up on any detail that I find fascinating about this art practice. To be more specific, my angle is to think about how live coding languages are inspired by certain aesthetical/political/technical ideas or concepts and how the implementation of these are giving rise to a new range of ideas inspired by the result we\'re now experiencing :)\\n\\nI\'ve also been working for quite some time on my own live coding environment named [Sardine](https://sardine.raphaelforment.fr). It started out as an experiment to reimplement some of the things I saw during my study; trying to understand them by doing! Then.. it started to mutate into its own thing! I\'m still actively working on it and I use it for my own performances nowadays. I have a group of friends and contributors that have been helping me to make it, and they also added their own ideas to it. I love to craft things where you put so much energy and craft! Alex was right saying that patterns are a valuable area of study! I see patterns all the time, and sometimes cross the path with some ideas already explored by Tidal! Sardine is also quite inspired by Tidal, it can even piggy-back on SuperDirt!\\n\\nMy current plan is to end all of this! Being done with both developing Sardine -- at least most of what I would like it to be -- and writing my manuscript!\\n\\n... If I have one thing to confess ...\\n\\nMy wildest dream would be to actually play bossa nova with grace using a live coding language. I don\'t think that I\'ll ever succeed but dreams are never big enough! I feel that live coding performances are missing some of that expressivity that \\"real\\" musicians have!\\n\\n### Links to your music / recorded livecoding sessions:\\n- Your Website : [Personal](https://raphaelforment.fr) | [Sardine](https://sardine.raphaelforment.fr)\\n- [YouTube](https://www.youtube.com/@raphaelforment7668)\\n- [Cookie Collective](https://cookie.paris)\\n\\n### Other\\n\\nBig shout out to my friends from the [Cookie Collective](https://cookie.paris) and from the Digital Audio Community in Lyon! They are also part of why I find live coding so interesting nowadays. It\'s a treat to make music / chat / collaborate with them. The french scene is more alive than ever but I feel that not much is said about it. Hope to meet with other live coders from all accross the world in the coming years!\\n\\nThanks to the Tidal community and to the wider TOPLAP / live coding community as well!"},{"id":"/tidal_profile_tedthetrumpet","metadata":{"permalink":"/blog/tidal_profile_tedthetrumpet","editUrl":"https://github.com/tidalcycles/tidal-doc/tree/main/blog/blog/tidal_profile_tedthetrumpet.md","source":"@site/blog/tidal_profile_tedthetrumpet.md","title":"Tidal Profile - tedthetrumpet (J Simon van der Walt)","description":"| Tidal Cyclist  | J Simon van der Walt |","date":"2023-02-25T00:00:00.000Z","formattedDate":"February 25, 2023","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Tidal Profile - tedthetrumpet (J Simon van der Walt)","date":"2023-02-25T00:00:00.000Z"},"prevItem":{"title":"Tidal Profile - BuboBubo (Rapha\xebl Maurice Forment )","permalink":"/blog/tidal_profile_bubobubo"},"nextItem":{"title":"Tidal Profile - cleary (Bernard Gray)","permalink":"/blog/contributor_profile_cleary"}},"content":"| Tidal Cyclist  | J Simon van der Walt |\\n| --------:    | :---------- |\\n| aka    | tedthetrumpet |\\n| Time with Tidal | 3  yrs |\\n| Other LiveCoding env | SuperCollider, Hydra, Strudel, Punctual |\\n| Music available online | [Bandcamp](https://tedthetrumpet.bandcamp.com/), [SoundCloud](https://soundcloud.com/tedthetrumpet), [YouTube](https://www.youtube.com/tedthetrumpet)  |\\n| Other music/audio sw | Audacity, MuseScore, Logic |\\n\\n<img\\n  src={require(\'./jsvdw-birdhide.jpg\').default}\\n  alt=\\"ttt birding\\"\\n  width=\\"600\\"\\n/>\\n\\n## Livecoding\\n\\n**What do you like about livecoding in Tidal?**\\n\\n- I have no background in computer science, but I find the syntax suprisingly intuitive. Also, by comparison with SuperCollider, you can get a lot of music going with very little typing.\\n\\n**How do you approach your livecoding sessions?**\\n\\n- Two main approaches, I guess. Usually it\'s just [quick improvisations](https://diode.zone/w/ocNZjYtoL54a1rcymwH2Gg) on the spur of the moment, often ending up with nothing more than a one minute long sketch. I\'m not particularly trying to create anything specific, and I just stop when I have something that sounds interesting.\\n- The other approach is when I have an idea for a particular sound or gesture or structure that I want to create. This is usually less succesful: I\'ve got a lot of [abandoned projects](https://youtu.be/zQwASJEnYEY) where I tried and failed over a period of days or weeks to achieve some aim or other.\\n\\n**What functions and coding approaches do you like to use?**\\n\\n- My favourite technique is one that some people frown on: making random but fixed patterns that repeat themselves. So, for instance, rather than explicitly creating a pattern in the mini notation, I usually start with something like `d1 $ n (loopFirst $ shuffle 8 $ run 8) # s \\"peri\\"`. (Which is actually one place where SuperCollider wins in conciseness, it\'s basically [Pshuf](http://doc.sccode.org/Classes/Pshuf.html)).\\n\\n\\n## Music\\n**Tell us about your livecoding music. What musical genre(s) or style(s) describe it best?**\\n\\n- Three main approaches: er\u2026 [gamelan](https://youtu.be/yN1STGvmRqY), [algorave](https://soundcloud.com/tedthetrumpet/twaytee), and [abstract](https://youtu.be/ID4Zh3C2Oso)? I should say \'gamelan\': in other words music that may use gamelan samples and ideas from Javanese or Balinese music without *really* being gamelan music. I have no proper skills, knowledge or understanding when it comes to dance music, but it\'s always fun to try to improvise an algorave banger live. \'Abstract\' might be when I use something like `slowstripe` to defeat any sense of pulse and start pitching samples down a couple of octaves.\\n\\n**How has your music evolved since you have been livecoding?**\\n\\n- I could say that livecoding saved my musical creativity after I finished my [PhD](https://archive.org/details/TheOtherOtherHand)! I got kind of burned out after spending seven years creating a conventional portfolio of \'compositions\'. With code I was able to just make stuff for myself without having to score it or get other people to play it or justify it to anyone.\\n\\n**What samples or instruments do you like to work with?**\\n\\n- My own samples. For me, creating and using my [own](https://github.com/tedthetrumpet/testpage/tree/master/samples/tptm) [sets](https://github.com/tedthetrumpet/testpage/tree/master/samples/longwhistles) of sounds is kind of fundamental to the creative process. For the purposes of a quick rave-up I\'ll happily turn to the standard Tidal set, but for me to really feel ownership of a piece I need to use samples and synths that I have a personal stake in.\\n\\n**What projects are you currently working on / planning? What\'s next?**\\n\\n- I need to find a way to release my [actual first album](https://soundcloud.com/tedthetrumpet/thealbumteaser). I finished it several years ago, but the label who were going to release it stopped functioning, so\u2026 I don\'t feel like I want to release it myself but I haven\'t found anyone else who is interested. Yet.\\n\\n\\n## Tidal Contributions\\n**How do you contribute to Tidal Cycles? What have you worked on?**\\n\\n- I\'m a musician not a developer, so I\'m not really able to \'contribute\' in the sense of code! However, I have made some [gamelan sample banks](https://github.com/tedthetrumpet/testpage/tree/master/nmsamples) available, asked (hopefully useful) questions on forums, taught Tidal at [my institution](https://pure.rcs.ac.uk/portal/en/persons/j-simon-van-der-walt(449d6ab3-50fe-4a02-bc83-76e1f88b2769).html), and initiated the [Floating Gold](http://www.nagamas.co.uk/floatinggold/) project that used MiniTidal in [Estuary](https://github.com/dktr0/estuary).\\n\\n## Links to your music / recorded livecoding sessions:\\n\\n- Most of the things I\'ve put out are actually in SuperCollider, but these are Tidal/MiniTidal \u2013\\n    - Improvising \'gamelan\' music in Estuary https://diode.zone/w/ppenMJ4p9W2b41pDe7ZNiA\\n    - Short Estuary piece \'brarnarnarnarnard\' https://www.youtube.com/watch?v=tV4G1z55ePA\\n    - Solstice Night Stream Dec 2022 - Livecoding with Audacity https://www.youtube.com/watch?v=0YpgHdJY-Kw&list=PLMBIpibV-wQIdS6D1vdijRZPfLBrRP9A_&index=6\\n    - Part of a longer jam I\'d forgotten about, starts abstract and gets a bit more rave later  https://youtu.be/jDl_ALEq4Zs?t=575\\n\\n## Other\\n\\n<img\\n  src={require(\'./jspcanscrop.png\').default}\\n  alt=\\"youth photo with vintage synth\\"\\n  width=\\"600\\"\\n/>\\n\\n- With my brother, late 1970s, homebrew [analog synth](http://pcbunn.cithep.caltech.edu/jjb/Synthesizers/Minisonic2/default.htm).\\n- [jsimonvanderwalt.com](https://jsimonvanderwalt.com)\\n- [tedthetrumpet.hotglue.me](https://tedthetrumpet.hotglue.me/)"},{"id":"/contributor_profile_cleary","metadata":{"permalink":"/blog/contributor_profile_cleary","editUrl":"https://github.com/tidalcycles/tidal-doc/tree/main/blog/blog/contributor_profile_cleary.md","source":"@site/blog/contributor_profile_cleary.md","title":"Tidal Profile - cleary (Bernard Gray)","description":"| Tidal Cyclist  | Bernard Gray |","date":"2023-02-16T00:00:00.000Z","formattedDate":"February 16, 2023","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Tidal Profile - cleary (Bernard Gray)","date":"2023-02-16T00:00:00.000Z"},"prevItem":{"title":"Tidal Profile - tedthetrumpet (J Simon van der Walt)","permalink":"/blog/tidal_profile_tedthetrumpet"},"nextItem":{"title":"Blog Archive","permalink":"/blog/blogArchive"}},"content":"| Tidal Cyclist  | Bernard Gray |\\n| --------:    | :---------- |\\n| aka    | cleary |\\n| Time with Tidal | 3  yrs |\\n| Contributor since | 2017 |\\n| Other LiveCoding env | Estuary, Punctual, Hydra, ORCA |\\n| Music available online | [SoundCloud](https://soundcloud.com/bergra) |\\n| Code online | [GitHub](https://github.com/cleary/livecode/) |\\n| Other music/audio sw | Ubuntu Studio/Ardour/Carla/Vital/mi-ugens|\\n\\n## Tidal Contributions\\n**How do you contribute to Tidal Cycles? What have you worked on?**\\n\\nI think I\'ve had a go at just about everything:\\n\\n- I developed and maintain a [Linux installer](https://github.com/cleary/ansible-tidalcycles) in Ansible\\n- I\'ve added a few [simple patches to](https://github.com/tidalcycles/Tidal/commits?author=cleary)/nutted out ideas for tidal itself, particularly around the [chords module](https://club.tidalcycles.org/t/rfc-working-on-making-chord-naming-chordlist-more-consistent/2717)\\n- I\'ve written [documentation](https://github.com/tidalcycles/tidal-doc/commits?author=cleary)\\n- I often [play in](https://youtube.com/playlist?list=PLt8O3WdGnQjdg8PPpRgsw4w9bSmX5JY7b), and have helped organise some of the Solstice Marathon Livestreams\\n- I am active and support others on the [forums](https://club.tidalcycles.org/u/cleary/summary) and the discord support channels\\n- For the last 2 years I\'ve been hosting a weekly collaborative (mostly tidal) livecoding session called [WeekendJam](https://youtube.com/playlist?list=PLt8O3WdGnQjfCNVBK2O0W0_nwiSgWIoFR) for anyone to come along and have a jam with me\\n- I\'ve written and run tidal-based [workshops](https://decoded.livecode.au), online and [in](https://allevents.in/griffith/decoded-%E2%80%94%E2%80%94-an-artistic-livecoding-workshop/200022125384118) [person](https://infrequency.au/) to try and network/raise the profile of the [livecoding scene in Australia](http://www.ozchi.org/2022/creativity.html)\\n\\n**What motivates you to be a Tidal contributor?**\\n\\n- The community is lovely, they give/have given me a lot and I like to return that where I can. The project allows for such vast and varied possibilities in learning and creation, and that\'s what keeps me interested. The focus on inclusivity, sharing and generally \\"anti-gatekeeping\\" is a huge drawcard for me too.\\n- I particularly enjoy the WeekendJams - I get to meet new people, share inspirations with all the different ideas all mashed together, learn, and just generally have a great time. I\'ve made some great friends through jams.\\n\\n## Livecoding\\n<img src=\\"https://photos.smugmug.com/photos/i-7r8LGsw/0/O/i-7r8LGsw.jpg\\"  width=\\"600\\" height=\\"450\\" />   \\n(photo: Jason Richardson)\\n\\n**What do you like about livecoding in Tidal?**\\n\\n- It\'s concise, it\'s (fairly) self-explanatory, and it\'s very easy to be both creatively specific and random as required.\\n\\n**How do you approach your livecoding sessions?**\\n\\n- For solo performances, I prepare something - usually a \\"scaffolded\\" set of code which allows for creative path choosing during the set.\\n- For the WeekendJam sessions, I never prepare anything beyond the occasional group idea for exploration (which is broached 5 mins before start time).\\n\\n**What functions and coding approaches do you like to use?**\\n\\n- I tend to make a point to separate my rhythmic and harmonic elements for easy reuse (`struct` and `n`/`note`) - which is a hangover from the collaborative nature of the WeekendJam sessions. I keep the code for most sets I play on [Github](https://github.com/cleary/livecode/tree/main/sets).\\n\\n**Do you use Tidal with other tools / environments?**\\n\\n- I\'ve done some external software synth control (Vital/Yoshimi), I also have a Midi Fighter Twister controller which sometimes gets a run. I tend to keep it pretty vanilla though, particularly since doing the workshop tours last year. Also, [estuary](https://estuary.mcmaster.ca) of course.\\n\\n## Music\\n**Tell us about your livecoding music. What musical genre(s) or style(s) describe it best?**\\n\\n- Varied? I don\'t really know much about genres - for more musical stuff, I tend to make use of western music theory. If I\'m doing solely rhythmic stuff I tend to try and push myself [outside my common use 4/4 6/8 time signatures](https://youtu.be/to1_4id_oyc) - the few patterns I did for [#patternuary this year](https://youtube.com/playlist?list=PLt8O3WdGnQjdh9SJqIQeku8u9g1acI5Y5) probably highlight that variety fairly well.\\n\\n**How has your music evolved since you have been livecoding?**\\n\\n- Yeah, _a lot_ - I played \\"traditional\\" instruments before I started. The biggest evolution has involved trying to break out of all the subconscious composer lockin that comes with that (fixed tempos, chords limited by number of fingers/how far they can stretch, increasing the number of simultaneous voices). It\'s moved from what I could do on a guitar/bass/piano with 10 fingers and a looper to beyond orchestral possibilities (and exposed my lack of compositional knowledge in that area!).\\n\\n**What samples or instruments do you like to work with?**\\n\\n- Anything :) I\'ve been trying to get more comfortable [working with break samples](https://youtu.be/JsZPN3yqu2s) a bit lately.\\n\\n**What projects are you currently working on / planning? What\'s next?**\\n\\n- I\'d like to develop the livecode.au domain into a tool for organisation/promotion of Australian livecoding events/personalities, that one is going to take more time than I currently have available, so it\'s on the backburner for now (unless anyone wants to give me hand!)\\n- To try and claw back a little time, I\'m looking at sharing the WeekendJam load a little, and hopefully moving it into a general stream/yt account so that multiple organisers can have control depending on availability.\\n- I\'d also like to finish and release some music, just to learn a bit more about the whole process chain - that\'s a hope item for this year :)\\n\\n## Links to your music / recorded livecoding sessions:\\n\\n- YouTube: https://www.youtube.com/@clearyss\\n- Soundcloud: https://soundcloud.com/bergra\\n- Twitch: https://www.twitch.tv/clearyss\\n- Github (code): https://github.com/cleary/livecode\\n\\n## Other\\n\\nJust a big thank you for all the people I\'ve chatted to/jammed with/learned from over the years, you\'ve all been a huge inspiration, and I\'m very glad to have been able to share my livecoding journey with you.  \\n\\n<img src=\\"https://photos.smugmug.com/photos/i-Tkwbk75/0/O/i-Tkwbk75.jpg\\"  width=\\"600\\" height=\\"450\\" />     \\n(photo: Jason Richardson)"},{"id":"/blogArchive","metadata":{"permalink":"/blog/blogArchive","editUrl":"https://github.com/tidalcycles/tidal-doc/tree/main/blog/blog/blogArchive.md","source":"@site/blog/blogArchive.md","title":"Blog Archive","description":"The older site had a Blog feature with posts from 2017 - 2020.","date":"2020-01-01T00:00:00.000Z","formattedDate":"January 1, 2020","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Blog Archive","date":"2020-01-01T00:00:00.000Z"},"prevItem":{"title":"Tidal Profile - cleary (Bernard Gray)","permalink":"/blog/contributor_profile_cleary"},"nextItem":{"title":"New Documentation","permalink":"/blog/2019/05/30/welcome"}},"content":"The older site had a Blog feature with posts from 2017 - 2020.  \\n[TidalCycles Blog Archive](https://blog.tidalcycles.org/index.html)\\n\\nContent to explore:\\n- [Interviews](https://blog.tidalcycles.org/category/interviews/index.html)\\n  - Malitzin Cortes aka CNDSD\\n  - Kindohm aka Mike Hodnick\\n- [Autonomous Live Coding: Summer of Haskell Project](https://blog.tidalcycles.org/index.html%3Fp=1280.html)\\n- [Six Months of Tidal](https://blog.tidalcycles.org/index.html%3Fp=346.html)\\n\\nSome of the posts may be dated, or refer to older versions of Tidal. But it is still interesting to reflect on how things have evolved."},{"id":"/2019/05/30/welcome","metadata":{"permalink":"/blog/2019/05/30/welcome","editUrl":"https://github.com/tidalcycles/tidal-doc/tree/main/blog/blog/2019-05-30-welcome.md","source":"@site/blog/2019-05-30-welcome.md","title":"New Documentation","description":"I\'ve started working on a major overhaul / reorganization of the old Tidal Userbase website. I think that this new documentation is now pretty much on par with the old one. I hope that you will like it.","date":"2019-05-30T00:00:00.000Z","formattedDate":"May 30, 2019","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Rapha\xebl Forment","title":"Tidal Cyclist","imageURL":"https://club.tidalcycles.org/user_avatar/club.tidalcycles.org/raph/240/45_2.png"}],"frontMatter":{"title":"New Documentation","author":"Rapha\xebl Forment","author_title":"Tidal Cyclist","author_image_url":"https://club.tidalcycles.org/user_avatar/club.tidalcycles.org/raph/240/45_2.png"},"prevItem":{"title":"Blog Archive","permalink":"/blog/blogArchive"}},"content":"I\'ve started working on a major overhaul / reorganization of the old [Tidal Userbase](https://tidalcycles.org/Userbase) website. I think that this new documentation is now pretty much on par with the old one. I hope that you will like it."}]}')}}]);