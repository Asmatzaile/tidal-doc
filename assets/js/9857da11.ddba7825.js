(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{156:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return o}));var a=n(3),l=n(7),r=(n(0),n(220)),c={title:"Understanding the $",permalink:"wiki/Understanding_the_$/",layout:"wiki",tags:["Reference|$"]},s={unversionedId:"working-with-patterns/Understanding_the_$",id:"working-with-patterns/Understanding_the_$",isDocsHomePage:!1,title:"Understanding the $",description:"The dollar (",source:"@site/docs/working-with-patterns/Understanding_the_$.md",slug:"/working-with-patterns/Understanding_the_$",permalink:"/docs/working-with-patterns/Understanding_the_$",editUrl:"https://github.com/tidalcycles/tidal-doc/tree/main/docs/working-with-patterns/Understanding_the_$.md",version:"current",lastUpdatedBy:"Koji Ishimoto",lastUpdatedAt:1615136026},b=[],p={toc:b};function o(e){var t=e.components,n=Object(l.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("translate",null," The dollar (",Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"$\n")),Object(r.b)("p",null,") is a mysterious thing. It doesn't really do anything, but is super\nuseful. It's easy to get it mixed up with other operators in Tidal, for\nexample"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"#\n")),Object(r.b)("p",null,", because in a way they both 'join things together'. But what is"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"$\n")),Object(r.b)("p",null,", exactly?"),Object(r.b)("p",null,"The"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"$\n")),Object(r.b)("p",null,"is used a ",Object(r.b)("em",{parentName:"p"},"lot")," in Haskell (the language which Tidal lives inside). Like\na lot of things in Haskell,"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"$\n")),Object(r.b)("p",null,"is a ",Object(r.b)("em",{parentName:"p"},"function"),". Like all operators (e.g."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"+\n")),Object(r.b)("p",null,"), it has two inputs - the left side, and the right side, and has one\noutput. The left input must be a function, and all that"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"$\n")),Object(r.b)("p",null,"does is pass what's on the right hand side, and give it to that\nfunction."),Object(r.b)("p",null,"In other words, in this expression:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},'rev $ "1 2 3"\n')),Object(r.b)("p",null,"... the dollar takes"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},'"1 2 3"\n')),Object(r.b)("p",null,"and passes it to the function"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"rev\n")),Object(r.b)("p",null,". So actually the above is the same as this:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},'rev "1 2 3"\n')),Object(r.b)("p",null,"So if we can do without it, why is it useful? Lets look at a slightly\nmore complex example:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},'fast 2 $ rev "1 2 3"\n')),Object(r.b)("p",null,"Here the dollar takes care of passing"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},'rev "1 2 3"\n')),Object(r.b)("p",null,"to"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"fast 2\n")),Object(r.b)("p",null,". If we missed it out, then we'd get an error."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},'-- this gives an error!\nfast 2 rev "1 2 3"\n')),Object(r.b)("p",null,"That's because the computer will first read"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"fast 2\n")),Object(r.b)("p",null,", then"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"rev\n")),Object(r.b)("p",null,", and try to treat"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"rev\n")),Object(r.b)("p",null,"as a pattern to be speeded up. But on its own,"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"rev\n")),Object(r.b)("p",null,"isn't a pattern, but a function for transforming pattern."),Object(r.b)("p",null,"To avoid this error, we could use parenthesis:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},'fast 2 (rev "1 2 3")\n')),Object(r.b)("p",null,"Here the brackets make sure"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},'rev "1 2 3"\n')),Object(r.b)("p",null,"is calculated first, before it is passed as a pattern to"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"fast 2\n")),Object(r.b)("p",null,"."),Object(r.b)("p",null,"So, both"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"$\n")),Object(r.b)("p",null,"and parenthesis can be used to control which code is calculated first.\nThe"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"$\n")),Object(r.b)("p",null,"is often used to avoid having to match opening and closing brackets, but\nsometimes parenthesis makes more sense."),Object(r.b)("p",null,"Note that you ",Object(r.b)("em",{parentName:"p"},"can't")," use"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"$\n")),Object(r.b)("p",null,"with operators. For example:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"-- this doesn't work either!\n4 * $ 2 + 3\n-- but this does\n4 * (2 + 3)\n")),Object(r.b)("p",null,"= Comparing"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"$\n")),Object(r.b)("p",null,"and"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"#\n")),Object(r.b)("p",null,"="),Object(r.b)("p",null,"So,"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"$\n")),Object(r.b)("p",null,"is used to join a parameter (on the right) with a function (on the\nleft)."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"#\n")),Object(r.b)("p",null,"(and all its friends"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"|+|\n")),Object(r.b)("p",null,","),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-Haskell"},"|*|\n")),Object(r.b)("p",null,", etc) are used to combine a pattern on the right with a pattern on the\nleft.")))}o.isMDXComponent=!0},220:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return O}));var a=n(0),l=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=l.a.createContext({}),o=function(e){var t=l.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=o(e.components);return l.a.createElement(p.Provider,{value:t},e.children)},i={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},d=l.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,p=b(e,["components","mdxType","originalType","parentName"]),u=o(n),d=a,O=u["".concat(c,".").concat(d)]||u[d]||i[d]||r;return n?l.a.createElement(O,s(s({ref:t},p),{},{components:n})):l.a.createElement(O,s({ref:t},p))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,c=new Array(r);c[0]=d;var s={};for(var b in t)hasOwnProperty.call(t,b)&&(s[b]=t[b]);s.originalType=e,s.mdxType="string"==typeof e?e:a,c[1]=s;for(var p=2;p<r;p++)c[p]=n[p];return l.a.createElement.apply(null,c)}return l.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);