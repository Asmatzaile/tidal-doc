"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2921],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),y=a,f=u["".concat(i,".").concat(y)]||u[y]||d[y]||o;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=y;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:a,l[1]=s;for(var p=2;p<o;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},3021:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(3117),a=(n(7294),n(3905));const o={title:"Different Kinds of Pattern",permalink:"wiki/Different_Kinds_of_Pattern/",layout:"wiki"},l=void 0,s={unversionedId:"Tidal_workshop_worksheet/Different_Kinds_of_Pattern",id:"Tidal_workshop_worksheet/Different_Kinds_of_Pattern",title:"Different Kinds of Pattern",description:"What is pattern, anyway?",source:"@site/docs/Tidal_workshop_worksheet/Different_Kinds_of_Pattern.md",sourceDirName:"Tidal_workshop_worksheet",slug:"/Tidal_workshop_worksheet/Different_Kinds_of_Pattern",permalink:"/docs/Tidal_workshop_worksheet/Different_Kinds_of_Pattern",draft:!1,editUrl:"https://github.com/tidalcycles/tidal-doc/tree/main/docs/Tidal_workshop_worksheet/Different_Kinds_of_Pattern.md",tags:[],version:"current",lastUpdatedBy:"Joan Queralt",lastUpdatedAt:1672071690,formattedLastUpdatedAt:"Dec 26, 2022",frontMatter:{title:"Different Kinds of Pattern",permalink:"wiki/Different_Kinds_of_Pattern/",layout:"wiki"}},i={},p=[{value:"Cyclic / repetitive",id:"cyclic--repetitive",level:2},{value:"Symmetry",id:"symmetry",level:2},{value:"Polymetric / polyrhythmic sequences",id:"polymetric--polyrhythmic-sequences",level:2},{value:"Euclidean rhythm/Bjorklund",id:"euclidean-rhythmbjorklund",level:2}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("languages",null)," ",(0,a.kt)("translate",null," What *is* pattern, anyway?",(0,a.kt)("p",null,"Let's think about some different kinds of pattern and how Tidal can\nrepresent them"),(0,a.kt)("h2",{id:"cyclic--repetitive"},"Cyclic / repetitive"),(0,a.kt)("p",null,"We can use"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Haskell"},"n\n")),(0,a.kt)("p",null,"to choose samples from a folder, this allows us to apply patterns there\ntoo!"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Haskell"},'d1 $ n "0 1 2 3" # sound "arpy"\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Haskell"},"Run\n")),(0,a.kt)("p",null,"is a short way of writing out sequential patterns"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Haskell"},'d1 $ n (run 4) # sound "arpy"\n')),(0,a.kt)("p",null,"or we can use"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Haskell"},"..\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Haskell"},'d1 $ n "0 .. 3" # sound "arpy"\n')),(0,a.kt)("h2",{id:"symmetry"},"Symmetry"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Haskell"},'d1 $ slow 2 $ n "0 1 2 3 3 2 1 0" # sound "arpy"\nd1 $ palindrome $ n (run 4) # sound "arpy"\n')),(0,a.kt)("h2",{id:"polymetric--polyrhythmic-sequences"},"Polymetric / polyrhythmic sequences"),(0,a.kt)("p",null,"Play two subsequences at once by using square brackets (sort of like one\nbig subsequence!) separating with a comma:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Haskell"},'d1 $ sound "[voodoo voodoo:3, arpy arpy:4 arpy:2]"\n')),(0,a.kt)("p",null,"If you use curly brackets instead of square you get a different effect.\nWith square brackets both halves of the sequence are fitted into the\ncycle (polyrhythm). With curly brackets the pulse is set by the left\nhand pattern. The right hand pattern can then overlap (or underlap!)\n(polymeter)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Haskell"},'d1 $ sound "[voodoo voodoo:3, arpy arpy:4 arpy:2]"\nd1 $ sound "{voodoo voodoo:3, arpy arpy:4 arpy:2}"\nd1 $ sound "[drum bd hh bd, can can:2 can:3 can:4 can:2]"\nd1 $ sound "{drum bd hh bd, can can:2 can:3 can:4 can:2}"\nd1 $ sound "[bd sn, can:2 can:3 can:1, arpy arpy:1 arpy:2 arpy:3 arpy:5]"\nd1 $ sound "{bd sn, can:2 can:3 can:1, arpy arpy:1 arpy:2 arpy:3 arpy:5}"\n')),(0,a.kt)("h2",{id:"euclidean-rhythmbjorklund"},"Euclidean rhythm/Bjorklund"),(0,a.kt)("p",null,"If you give two numbers in brackets after an element in a pattern, then\nTidal will try to distribute the first number of sounds equally across\nthe second number of steps."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Haskell"},'d1 $ sound "bd(5,8)"\n')),(0,a.kt)("p",null,"You can use this notation within a single element of a pattern:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Haskell"},'d1 $ sound "bd(3,8) sn*2"\nd1 $ sound "bd(3,8) sn(5,8)"\n')),(0,a.kt)("p",null,"You can also add a third parameter, which \u2018rotates\u2019 the pattern so it\nstarts on a different step:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Haskell"},'d1 $ sound "bd(5,8,2)"\n'))))}u.isMDXComponent=!0}}]);