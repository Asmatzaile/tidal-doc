{{DISPLAYTITLE:run}} 
[[Type signature|Type]]: <syntaxhighlight lang="haskell" inline>run :: (Num a, Enum a) => Pattern a -> Pattern a </syntaxhighlight>

The '''run''' function generates a pattern representing a cycle of numbers from 0 to n-1 inclusive. Notably used to ‘run’ through a folder of samples in order:

<source>
d1 $ n (run 8) # sound "amencutup"
</source>

The first parameter to run can be given as a pattern:
<source>
d1 $ n (run "<4 8 4 6>") # sound "amencutup"
</source>

= scan =

[[Type signature|Type]]: <syntaxhighlight lang="haskell" inline>scan :: (Num a, Enum a) => Pattern a -> Pattern a</syntaxhighlight>

'''scan''' is similar to [[run]], but starts at 1 for the first cycle, adding an additional number each cycle until it reaches n

<source>
d1 $ n (scan 8) # sound "amencutup"
</source>

[[Category:Functions]]