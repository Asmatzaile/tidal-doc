{{DISPLAYTITLE:loopAt}} 

[[Type signature|Type]]: <source inline>loopAt :: Pattern Time -> ControlPattern -> ControlPattern</source>

'''loopAt''' makes sample fit the given number of cycles. Internally, it works by setting the [[unit]] control to "c", changing the playback speed of the sample with the speed parameter, and setting the density of the pattern to match.

<source>
d1 $ loopAt 4 $ sound "breaks125"
</source>

It’s a good idea to use this in conjuction with chop, so the break is chopped into pieces and you don’t have to wait for the whole sample to start/stop.

<source>
d1 $ loopAt 4 $ chop 32 $ sound "breaks125"
</source>

Like all tidal functions, you can mess about with this considerably. The below example shows how you can supply a pattern of cycle counts to <source inline>loopAt</source>:

<source>
d1 $ juxBy 0.6 (|* speed "2") $ loopAt "<4 6 2 3>" $ chop 12 $ sound "fm:14"
</source>

''See also: [[chop]]''

[[Category:Functions]]