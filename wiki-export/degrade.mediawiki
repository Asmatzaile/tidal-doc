{{DISPLAYTITLE:degrade}} 
[[Type signature|Type]]: <source inline>degrade :: Pattern a -> Pattern a</source>

'''degrade''' randomly removes events from a pattern, 50% of the time. Example usage:

<source>
d1 $ slow 2 $ degrade $ sound "[[[feel:5*8,feel*3] feel:3*8], feel*4]"
   # accelerate "-6"
   # speed "2"
</source>

= degradeBy =

[[Type signature|Type]]: <syntaxhighlight lang="haskell" inline>degradeBy :: Double -> Pattern a -> Pattern a</syntaxhighlight>

Similarly to <source inline>degrade</source>, '''degradeBy''' allows you to control the percentage of events that are removed. For example, to remove events 90% of the time:

<source>
d1 $ slow 2 $ degradeBy 0.9 $ sound "[[[feel:5*8,feel*3] feel:3*8], feel*4]"
   # accelerate "-6"
   # speed "2"
</source>

= unDegradeBy =

[[Type signature|Type]]: <syntaxhighlight lang="haskell" inline>unDegradeBy :: Double -> Pattern a -> Pattern a</syntaxhighlight>

<source inline>unDegradeBy</source> is <source inline>degradeBy</source> but with the percentage describing how many events to ''keep'' on average not ''remove''.

[[Category:Functions]] [[Category:Randomness and chance]]