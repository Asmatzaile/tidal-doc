{{DISPLAYTITLE:striate}} 
[[Type signature|Type]]: <source inline>striate :: Pattern Int -> ControlPattern -> ControlPattern</source>

'''striate''' is a kind of granulator, cutting samples into bits in a similar to [[chop]], but the resulting bits are organised differently. For example:

<source>
d1 $ slow 4 $ striate 3 $ sound "numbers:0 numbers:1 numbers:2 numbers:3"
</source>

This plays the loop the given number of times, but triggering progressive portions of each sample. So in this case it plays the loop three times, the first time playing the first third of each sample, then the second time playing the second third of each sample, and then finally the last third of each sample.. 

Compare this with [[chop]]:

<source>
d1 $ slow 4 $ chop 3 $ sound "numbers:0 numbers:1 numbers:2 numbers:3"
</source>

You can hear that the striate version 'interlaces' the cut up bits of samples together, whereas the chop version plays the bits from each chopped up sample in turn. It might be worth listening to the samples without granulation, in case that helps understand what’s happening in the above:

<source>
d1 $ slow 4 $ sound "numbers:0 numbers:1 numbers:2 numbers:3"
</source>

= striateBy =
[[Type signature|Type]]: <source inline>striateBy :: Pattern Int -> Pattern Double -> ControlPattern -> ControlPattern</source>

''striateBy'' (formerly called <source inline>striate'</source>) is a variant of <source inline>striate</source>, with an extra parameter, which specifies the length of each part. <source inline>striate</source> still scans across the sample over a single cycle, but if each bit is longer, it creates a sort of stuttering effect. For example the following will cut the bev sample into 32 parts, but each will be 1/16th of a sample long:

<source>
d1 $ slow 32 $ striateBy 32 (1/16) $ sound "bev"
</source>

Note that striate uses the [[begin]] and [[end]] parameters internally. This means that if you’re using <source inline>striate</source> or <source inline>striateBy</source> you probably shouldn’t also specify begin or end.

''See also: [[chop]]''

[[Category:Functions]]