{{DISPLAYTITLE:rot}} 
[[Type signature|Type]]: <syntaxhighlight lang="haskell" inline>rot :: Ord a => Pattern Int -> Pattern a -> Pattern a</syntaxhighlight>

The '''rot''' function 'rotates' the values in a pattern, while preserving its structure. For example in the following, each value will shift to its neighbour's position one step to the left, so that b takes the place of a, a of c, and c of b:

<syntaxhighlight lang="haskell">
rot 1 "a ~ b c"
</syntaxhighlight>

The result is equivalent of 

<syntaxhighlight lang="haskell">
"b ~ c a"
</syntaxhighlight>

The first parameter is the number of steps, and may be given as a pattern, for example:

<syntaxhighlight lang="haskell">
d1 $ rot "<0 0 1 3>" $ n "0 ~ 1 2 0 2 ~ 3*2" # sound "drum"
</syntaxhighlight>

The above will not rotate the pattern for the first two cycles, will rotate it by one the third cycle, and by three the fourth cycle.

[[Category:Functions]] [[Category:Tidal-1+]]