{{DISPLAYTITLE:iter}} 
[[Type signature|Type]]: <syntaxhighlight lang="haskell" inline>iter :: Pattern Int -> Pattern a -> Pattern a</syntaxhighlight>

'''iter''' divides a pattern into a given number of subdivisions, plays the subdivisions in order, but increments the starting subdivision each cycle. The pattern wraps to the first subdivision after the last subdivision is played.

Example:

<source>
d1 $ iter 4 $ sound "bd hh sn cp"
</source>

This will produce the following over four cycles:

 bd hh sn cp
 hh sn cp bd
 sn cp bd hh
 cp bd hh sn

= iter' =

'''iter'''' does the same as [[iter]] but in the other direction. So this:

<source>
d1 $ iter' 4 $ sound "bd hh sn cp"
</source>

Produces this pattern:

 bd hh sn cp
 cp bd hh sn
 sn cp bd hh
 hh sn cp bd

[[Category:Functions]] [[Category:Time Functions]]